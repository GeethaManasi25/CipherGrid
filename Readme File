Project Overview
CipherGrid is an intelligent anomaly detection and visualization platform designed for critical energy-grid infrastructures.
It applies machine learning and network analytics to detect, classify, and mitigate anomalies in real time. The system visualizes threats, recommends responses, and simulates industrial network traffic to test its reliability.

Project Objectives
Develop an AI-driven anomaly detection engine using Autoencoder and Isolation Forest models.
Implement a Kafka-based simulation module for replaying grid telemetry events.
Design an interactive visualization dashboard for displaying anomalies and recommended mitigations.
Build a Flask backend API to process and classify network data.
Deliver a secure, modular, and real-time system suitable for energy-grid operations.

System Architecture

Replay Simulator ‚Üí Kafka Producer ‚Üí Kafka Broker
         ‚Üì
     Flask Backend ‚Üí ML Engine (Autoencoder)
         ‚Üì
     Mitigation Service (Response Engine)
         ‚Üì
   Frontend Dashboard (React + Chart.js)

Folder Structure

| Component              | Description                                                      |
| ---------------------- | ---------------------------------------------------------------- |
| **Simulation**         | Replays network events into Kafka for anomaly detection testing. |
| **Backend (Flask)**    | Handles ML model inference, data storage, and mitigation logic.  |
| **Frontend (React)**   | Displays dashboards for alerts, metrics, and risk visualization. |
| **Database**           | Stores events, anomalies, and mitigation logs.                   |
| **Mitigation Service** | Suggests responses to detected anomalies based on severity.      |

Setup Guide:
1. Clone Repository
git clone https://github.com/GeethaManasi25/CipherGrid.git
cd CipherGrid
2. Backend setup
cd ciphergrid_backend
python -m venv venv
venv\Scripts\activate
pip install -r requirements.txt
python app.py
Runs on: http://127.0.0.1:5000
3. Frontend setup
cd ../ciphergrid_frontend
npm install
npm start
Opens dashboard at: http://localhost:3000

üìä Features

‚úÖ Real-time anomaly detection
‚úÖ Automated mitigation recommendations
‚úÖ Interactive data visualization dashboard
‚úÖ Kafka-based simulation engine
‚úÖ Modular Flask-React architecture

üßë‚Äçüíª Team MA5
Name	Role
Abdul Samad Mohammed	Protocol Understanding & Dashboard Support
Geetha Manasi Natarajan	Backend Flask API and Frontend Visualization (Dashboard)
Berk Burali	ML Model Development
Kevil Pansuriya	ML Model Evaluation
Ansh Srivastava	Data Collection / Threat Classification
Md Mahidur Rahman	Protocol Analysis / Threat Mapping
Sakshyam Neupane	System Architecture & Documentation
